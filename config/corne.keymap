/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * To use home rows - &hm LSHFT F
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/*
#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3
#define Fkey 4
*/

&led_strip { chain-length = <27>; };

&sl { release-after-ms = <5000>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    \     |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   SHFT       |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
            // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
            //                                   | ALT/GUI|   MO1   |   SPC/2 |       |  ENT  |   BKSP  |  MO1    |
            //                                   '--------+---------+---------'       '-------+---------+---------'

            bindings = <
&kp ESC        &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BACKSLASH
&mt LCTRL TAB  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt LGUI GRAVE
                             &kp LALT  &mo 1  &lt 2 RET    &kp SPACE  &kp BSPC  &kp LCTRL
            >;
        };

        symbol_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // |   ESC        |    1    |    2   |   3    |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |    `     |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |              |    !    |    @   |   #    |    $    |    %    |       |   ^   |    &    |    *    |    (    |     )    |     :    |
            // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
            // |   SHFT       |         |    +   |   -    |    {    |    [    |       |   ]   |    }    |    =    |    _    |          |          |
            // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
            //                                   |  GUI   |         |   MO3   |       |   ,   |    MO4  |         |
            //                                   '--------+---------+---------'       '-------+---------+---------'

            bindings = <
&kp ESC    &kp N1    &kp N2       &kp N3        &kp N4          &kp N5              &kp N6             &kp N7           &kp N8           &kp N9          &kp N0    &kp GRAVE
&trans     &kp EXCL  &kp AT       &kp HASH      &kp DLLR        &kp PRCNT           &kp CARET          &kp AMPS         &kp KP_MULTIPLY  &kp LPAR        &kp RPAR  &kp COLON
&kp LSHFT  &trans    &kp KP_PLUS  &kp KP_MINUS  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp EQUAL        &kp UNDERSCORE  &trans    &trans
                                  &kp LGUI      &trans          &mo 3               &kp KP_N1          &mo 3            &trans
            >;
        };

        move_layer {
            // .----------------------------------------------------------------.       .-----------------------------------------------------------------.
            // |   CMD+SHIFT+4  |       |   PU   |   UP   |    PD    |   HOME   |       |  HOME   |    PU    |    UP   |   PD    |          | CMD+SHIFT+4 |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |                |       |  LEFT  |  DOWN  |   RIGHT  |   END    |       |  END    |   LEFT   |   DOWN  |  RIGHT  |          |             |
            // |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
            // |     OUT_TOG    |       |        |        |CTRL+LEFT |CTRL+RIGHT|       |CTRL+LEFT|CTRL+RIGHT|         |         |          |   OUT_TOG   |
            // '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
            //                                   |  GUI   |   MO3    |          |       |         |          |         |
            //                                   '--------+----------+----------'       '---------+----------+---------'

            bindings = <
&kp LG(LS(N4))  &kp INS  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN       &kp HOME               &kp CARET           &kp PAGE_UP          &kp UP_ARROW    &kp PAGE_DOWN    &kp HOME  &kp LG(LS(N4))
&trans          &kp DEL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp END                &kp MINUS           &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END   &trans
&out OUT_TOG    &trans   &trans          &trans          &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)    &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans          &trans           &trans    &out OUT_TOG
                                         &kp LGUI        &mo 3               &trans                 &trans              &trans               &trans
            >;
        };

        setting_layer {
            // .--------------------------------------------------------.       .--------------------------------------------------------------.
            // | sys_rst |        |        |        |         |         |       |  VOL+  |        |         |         |          |   sys_rst   |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  VOL-  |        |         |  RGB_ON |          |             |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |  VCC_ON | VCC_OFF|输出方式|        |         |         |       | 背光   | 背光+  |  背光-  |  RGB_OFF|   RGB+   |  RGB-       |
            // '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
            //                             |        |         |         |       |        |        |         |
            //                             '--------+---------+---------'       '--------+--------+---------'

            bindings = <
&sys_reset         &trans           &trans        &trans        &sl 4         &tog 5          &sl 6              &trans           &trans           &trans           &out OUT_TOG     &sys_reset
&ext_power EP_ON   &rgb_ug RGB_ON   &bt BT_CLR    &bt BT_SEL 1  &bt BT_SEL 3  &out OUT_TOG    &ext_power EP_ON   &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &kp C_VOLUME_UP
&ext_power EP_OFF  &rgb_ug RGB_OFF  &bt BT_SEL 0  &bt BT_SEL 2  &bt BT_SEL 4  &trans          &ext_power EP_OFF  &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &kp C_VOLUME_DOWN
                                                  &trans        &trans        &trans          &trans             &trans           &trans
            >;
        };

        f1f20_layer {
            // .--------------------------------------------------------.       .--------------------------------------------------------------.
            // |         |   F1   |   F2   |    F3  |     F4  |  F5     |       |  F6    |  F7    |   F8    |    F9   |   F10    |             |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |         |   F11  |   F12  |   F13  |    F14  |  F15    |       |  F16   |  F17   |   F18   |   F19   |   F20    |             |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |         |        |        |        |         |         |       |        |        |         |         |          |             |
            // '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
            //                             |        |         |         |       |        |        |         |
            //                             '--------+---------+---------'       '--------+--------+---------'

            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans   &trans   &trans
                          &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };

        ad_layer {
            bindings = <
&kp ESC         &kp INS  &kp FSLH  &kp UP        &kp ASTERISK  &kp MINUS     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                &kp LC(LA(KP_NUMBER_8))  &trans
&kp LCTRL       &kp DEL  &kp LEFT  &kp DOWN      &kp RIGHT     &kp PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LC(LA(KP_NUMBER_4))  &kp LC(LA(KP_NUMBER_5))  &kp LC(LA(KP_NUMBER_6))
&kp LEFT_SHIFT  &kp Z    &kp X     &kp C         &kp V         &kp PERIOD    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS                 &kp LC(LA(KP_NUMBER_2))  &trans
                                   &kp LEFT_ALT  &trans        &kp RET       &kp KP_NUMBER_0  &tog 5           &trans
            >;
        };

        f20_layer {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans   &trans   &trans
                          &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };

        base_layer {
            bindings = <
&trans  &kp Q           &kp W       &kp E        &kp R         &kp T         &kp Y       &kp U             &kp I          &kp O       &kp P         &trans
&trans  &mt LEFT_WIN A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G         &kp H       &mt LSHIFT J      &mt LCTRL K    &mt LALT L  &mt LWIN SQT  &trans
&trans  &lt 14 Z        &kp X       &kp C        &kp V         &kp B         &kp N       &kp M             &kp COMMA      &kp DOT     &lt 14 FSLH   &trans
                                    &lt 8 ESC    &lt 9 SPACE   &lt 10 TAB    &lt 11 RET  &lt 12 BACKSPACE  &lt 13 DELETE
            >;
        };

        media_layer {
            bindings = <
&trans  &trans        &trans    &trans     &trans      &bt BT_CLR      &rgb_ug RGB_TOG    &rgb_ug RGB_HUD   &rgb_ug RGB_SAD    &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
&trans  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHIFT  &bt BT_SEL 4    &ext_power EP_TOG  &kp K_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_NEXT       &trans
&trans  &trans        &trans    &trans     &trans      &trans          &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3     &trans
                                &trans     &mo 9       &mo 10          &kp C_STOP         &kp C_PLAY_PAUSE  &kp K_MUTE
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans        &trans    &trans     &trans      &trans    &kp K_REDO    &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans    &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans        &trans    &trans     &trans      &trans    &kp INSERT    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                &mo 8      &trans      &mo 10    &kp ENTER     &kp BACKSPACE   &kp DEL
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans        &trans    &trans     &trans      &trans    &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans    &trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans        &trans    &trans     &trans      &trans    &trans      &trans          &trans          &trans        &trans           &trans
                                &mo 8      &mo 9       &trans    &mkp RCLK   &mkp LCLK       &mkp MCLK
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans      &trans     &trans    &trans        &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp LCTRL              &kp PLUS           &trans  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LEFT_WIN  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &trans  &trans      &trans     &trans    &trans        &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &mo 12      &mo 13
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET       &trans  &trans      &trans     &trans    &trans        &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL               &trans  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LEFT_WIN  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NON_US_BACKSLASH    &trans  &trans      &trans     &trans    &trans        &trans
                                        &kp PERIOD    &kp N0        &kp MINUS               &mo 11  &trans      &mo 13
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp PRINTSCREEN    &trans  &trans      &trans     &trans    &trans        &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &trans  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LEFT_WIN  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &trans  &trans      &trans     &trans    &trans        &trans
                         &kp PERIOD  &kp SPACE  &kp TAB            &mo 11  &mo 12      &trans
            >;
        };

        button_layer {
            bindings = <
&trans  &kp K_UNDO    &kp K_CUT     &kp K_COPY  &kp K_PASTE   &kp K_REDO    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT     &kp K_UNDO    &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LSHIFT  &mt LSHIFT F  &trans        &trans      &kp LSHIFT   &kp LCTRL   &kp LEFT_ALT  &kp LEFT_WIN  &trans
&trans  &kp K_UNDO    &kp K_CUT     &kp K_COPY  &kp K_PASTE   &kp K_REDO    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT     &kp K_UNDO    &trans
                                    &mkp MCLK   &mkp LCLK     &mkp RCLK     &mkp RCLK   &mkp LCLK    &mkp MCLK
            >;
        };
    };
};
